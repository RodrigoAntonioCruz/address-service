version: "3.8"

services:
  mongo:
    container_name: mongo
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - "27017:27017"
    networks:
      - app-net

  redis:
    image: redis:6.2.5
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis:/var/lib/redis
      - redis-config:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    networks:
      - app-net

  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      REDIS_HOSTS: ${REDIS_HOSTS}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_HOST}:${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      HTTP_USER: ${REDIS_COMMANDER_USER}
      HTTP_PASSWORD: ${REDIS_COMMANDER_PASSWORD}
    ports:
      - "8081:8081"
    networks:
      - app-net

#
#  prometheus:
#    image: prom/prometheus:v2.48.1
#    container_name: prometheus
#    restart: unless-stopped
#    volumes:
#      - ./observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
#    healthcheck:
#      test: ["CMD", "nc", "-z", "localhost", "9090"]
#      interval: 30s
#      timeout: 10s
#      retries: 3
#    ports:
#      - "9090:9090"
#    networks:
#      - app-net
#
#  grafana:
#    image: grafana/grafana:9.5.15
#    container_name: grafana
#    restart: unless-stopped
#    environment:
#      - GF_USERS_ALLOW_SIGN_UP=false
#    depends_on:
#      - prometheus
#    volumes:
#      - ./observability/grafana/provisioning:/etc/grafana/provisioning
#    healthcheck:
#      test: ["CMD", "nc", "-z", "localhost", "3000"]
#      interval: 30s
#      timeout: 10s
#      retries: 3
#    ports:
#      - "3000:3000"
#    networks:
#      - app-net
#
#  app:
#    build: .
#    container_name: spring-app
#    depends_on:
#      - mongo
#    environment:
#      # Spring Boot
#      SPRING_APPLICATION_NAME: example
#      SPRING_APP_VERSION: v@project.version@
#      SPRING_PROFILES_ACTIVE: dev
#      SERVER_PORT: 8887
#      SERVER_SERVLET_CONTEXT_PATH: /v1/api
#      SPRING_MVC_LOCALE: pt_BR
#
#      # Management
#      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: '*'
#      MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED: true
#      MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED: true
#      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: always
#      MANAGEMENT_HEALTH_PROBES_ENABLED: true
#
#      # Jackson
#      SPRING_JACKSON_DATE_FORMAT: dd/MM/yyyy HH:mm:ss
#      SPRING_JACKSON_TIME_ZONE: Brazil/East
#
#      # Multipart
#      SPRING_SERVLET_MULTIPART_ENABLED: true
#      SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE: 2MB
#      SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE: 2MB
#
#      # Redis
#      SPRING_REDIS_HOST: ${REDIS_HOST}
#      SPRING_REDIS_PORT: ${REDIS_PORT}
#      SPRING_REDIS_PASSWORD: ${REDIS_PASSWORD}
#
#      # MongoDB
#      SPRING_DATA_MONGODB_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@${MONGO_INITDB_HOST}:${MONGO_INITDB_PORT}/${MONGO_INITDB_DATABASE}?authSource=admin&readPreference=primary&appname=spring-app&directConnection=true&ssl=false
#

volumes:
  redis:
  redis-config:

networks:
  app-net:
    driver: bridge