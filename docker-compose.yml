services:
  mongo:
    container_name: mongo
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - "${MONGO_PORT_EXPOSE}:27017"
    networks:
      - app-net

  redis:
    image: redis:6.2.5
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis:/var/lib/redis
      - redis-config:/usr/local/etc/redis/redis.conf
    ports:
      - "${REDIS_PORT_EXPOSE}:6379"
    networks:
      - app-net

  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      REDIS_HOSTS: ${REDIS_HOSTS}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      HTTP_USER: ${REDIS_COMMANDER_USER}
      HTTP_PASSWORD: ${REDIS_COMMANDER_PASSWORD}
    ports:
      - "${REDIS_COMMANDER_PORT_EXPOSE}:8081"
    networks:
      - app-net

  loki:
    image: grafana/loki:3.5.0
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "${LOKI_PORT_EXPOSE}:3100"
    networks:
      - app-net

  promtail:
    image: grafana/promtail:2.9.3
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ${PROMTAIL_CONFIG_PATH}:/etc/promtail
    command: -config.file=/etc/promtail/promtail.yml
    depends_on:
      - loki
    ports:
      - "${PROMTAIL_PORT_EXPOSE}:9080"
    networks:
      - app-net

  prometheus:
    image: prom/prometheus:v3.3.1
    volumes:
      - ${PROMETHEUS_CONFIG_PATH}:/workspace
    command:
      - --config.file=/workspace/prometheus.yml
      - --enable-feature=exemplar-storage
    depends_on:
      - loki
    ports:
      - "${PROMETHEUS_PORT_EXPOSE}:9090"
    networks:
      - app-net

  tempo:
    image: grafana/tempo:2.7.2
    command:
      - "-config.file=/etc/tempo.yml"
      - "--target=all"
      - "--storage.trace.backend=local"
      - "--storage.trace.local.path=/var/tempo"
      - "--auth.enabled=false"
    volumes:
      - ./etc/tempo.yml:/etc/tempo.yml
    depends_on:
      - loki
    ports:
      - "${TEMPO_GRPC_PORT_EXPOSE}:4317"
      - "${TEMPO_HTTP_PORT_EXPOSE}:4318"
    networks:
      - app-net

  grafana:
    image: grafana/grafana:12.0.1
    volumes:
      - ${GRAFANA_CONFIG_PATH}:/etc/grafana/provisioning/datasources
      - ./etc/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ${DASHBOARDS_PATH}:/etc/grafana/dashboards
    depends_on:
      - loki
      - prometheus
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: false
      GF_SECURITY_ADMIN_USER: ${GF_USERNAME}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_PASSWORD}
    ports:
      - "${GRAFANA_PORT_EXPOSE}:3000"
    networks:
      - app-net

  app:
    build: .
    container_name: ${SERVICE_NAME}
    depends_on:
      - mongo
      - redis
      - redis-commander
    environment:
      SPRING_APPLICATION_NAME: ${SERVICE_NAME}
      SPRING_APP_VERSION: v@project.version@
      SPRING_PROFILES_ACTIVE: dev
      SERVER_PORT: ${APP_PORT_EXPOSE}
      SERVER_SERVLET_CONTEXT_PATH: /v1/api
      SPRING_MVC_LOCALE: pt_BR
      OTEL_EXPORTER_OTLP_ENDPOINT: ${OTLP_ENDPOINT}
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
      OTEL_SERVICE_NAME: ${SERVICE_NAME}
      OTEL_METRICS_EXPORTER: none
      OTEL_LOGS_EXPORTER: none
      MANAGEMENT_METRICS_TAGS_APPLICATION: ${SERVICE_NAME}
      SPRING_SECURITY_USER_NAME: ${APPLICATION_USERNAME}
      SPRING_SECURITY_USER_PASSWORD: ${APPLICATION_PASSWORD}
      SPRING_SECURITY_USER_ROLES: ${APPLICATION_ROLES}
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: '*'
      MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED: true
      MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED: true
      MANAGEMENT_ENDPOINT_PROMETHEUS_REQUIRE_AUTHORIZATION: false
      MANAGEMENT_ENDPOINTS_WEB_AUTHORIZATION_ENABLED: false
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: always
      MANAGEMENT_HEALTH_PROBES_ENABLED: true
      SPRING_JACKSON_DATE_FORMAT: dd/MM/yyyy HH:mm:ss
      SPRING_JACKSON_TIME_ZONE: Brazil/East
      SPRING_DATA_REDIS_HOST: ${REDIS_HOST}
      SPRING_DATA_REDIS_PORT: ${REDIS_PORT}
      SPRING_DATA_REDIS_PASSWORD: ${REDIS_PASSWORD}
      SPRING_CACHE_TYPE: redis
      SPRING_CACHE_REDIS_TIME_TO_LIVE: 7d
      SPRING_CACHE_REDIS_CACHE_NULL_VALUES: false
      SPRING_DATA_REDIS_SERIALIZER_VALUE: GENERIC_JACKSON2_JSON
      SPRING_DATA_MONGODB_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@${MONGO_INITDB_HOST}:${MONGO_INITDB_PORT}/${MONGO_INITDB_DATABASE}?authSource=admin&readPreference=primary&appname=app&directConnection=true&ssl=false
      FEIGN_CLIENT_VIACEP_URL: ${VIACEP_SERVICE}
      FEIGN_CLIENT_CONFIG_VIACEPCLIENT_CONNECTTIMEOUT: 5000
      FEIGN_CLIENT_CONFIG_VIACEPCLIENT_READTIMEOUT: 5000
      RESILIENCE4J_CIRCUITBREAKER_INSTANCES_DEFAULT_REGISTER_HEALTH_INDICATOR: true
      RESILIENCE4J_CIRCUITBREAKER_INSTANCES_DEFAULT_SLIDING_WINDOW_SIZE: 5
      RESILIENCE4J_CIRCUITBREAKER_INSTANCES_DEFAULT_FAILURE_RATE_THRESHOLD: 50
      RESILIENCE4J_CIRCUITBREAKER_INSTANCES_DEFAULT_WAIT_DURATION_IN_OPEN_STATE: 10s
      RESILIENCE4J_RETRY_INSTANCES_DEFAULT_MAX_ATTEMPTS: 3
      RESILIENCE4J_RETRY_INSTANCES_DEFAULT_WAIT_DURATION: 2s
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      LOG_LEVEL: ${LOG_LEVEL}
      LOGGING_LEVEL_ROOT: ${LOG_LEVEL}
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK: ${LOG_LEVEL}
      LOGGING_LEVEL_BR_COM_RD: ${LOG_LEVEL}
      LOGGING_LEVEL_COM_RD: ${LOG_LEVEL}
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_CACHE: DEBUG
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: DEBUG
      LOGGING_PATTERN_LEVEL: "trace_id=%mdc{trace_id} span_id=%mdc{span_id} trace_flags=%mdc{trace_flags} %p"
    labels:
      compose_service: ${SERVICE_NAME}
    ports:
      - "${APP_PORT_EXPOSE}:8887"
    networks:
      - app-net

volumes:
  redis:
  redis-config:

networks:
  app-net:
    driver: bridge
    name: ${NETWORK_NAME}
